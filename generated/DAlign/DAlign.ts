// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AnswerAdded extends ethereum.Event {
  get params(): AnswerAdded__Params {
    return new AnswerAdded__Params(this);
  }
}

export class AnswerAdded__Params {
  _event: AnswerAdded;

  constructor(event: AnswerAdded) {
    this._event = event;
  }

  get promptId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get answerId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get content(): string {
    return this._event.parameters[2].value.toString();
  }

  get submittedBy(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class AnswersRated extends ethereum.Event {
  get params(): AnswersRated__Params {
    return new AnswersRated__Params(this);
  }
}

export class AnswersRated__Params {
  _event: AnswersRated;

  constructor(event: AnswersRated) {
    this._event = event;
  }

  get promptId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get winningAnswerId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get losingAnswerId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get newWinnerElo(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get newLoserElo(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get submittedBy(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class PromptCreated extends ethereum.Event {
  get params(): PromptCreated__Params {
    return new PromptCreated__Params(this);
  }
}

export class PromptCreated__Params {
  _event: PromptCreated;

  constructor(event: PromptCreated) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get content(): string {
    return this._event.parameters[1].value.toString();
  }

  get submittedBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class PromptQualityEvaluated extends ethereum.Event {
  get params(): PromptQualityEvaluated__Params {
    return new PromptQualityEvaluated__Params(this);
  }
}

export class PromptQualityEvaluated__Params {
  _event: PromptQualityEvaluated;

  constructor(event: PromptQualityEvaluated) {
    this._event = event;
  }

  get promptId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get newTotalQuality(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newNumberOfQualityVotes(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get submittedBy(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class DAlign__answersResult {
  value0: Bytes;
  value1: string;
  value2: BigInt;
  value3: BigInt;
  value4: Address;

  constructor(
    value0: Bytes,
    value1: string,
    value2: BigInt,
    value3: BigInt,
    value4: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromSignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    return map;
  }

  getId(): Bytes {
    return this.value0;
  }

  getContent(): string {
    return this.value1;
  }

  getEloScore(): BigInt {
    return this.value2;
  }

  getNumberOfRatings(): BigInt {
    return this.value3;
  }

  getSubmittedBy(): Address {
    return this.value4;
  }
}

export class DAlign__promptsResult {
  value0: Bytes;
  value1: string;
  value2: BigInt;
  value3: BigInt;
  value4: Address;

  constructor(
    value0: Bytes,
    value1: string,
    value2: BigInt,
    value3: BigInt,
    value4: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    return map;
  }

  getId(): Bytes {
    return this.value0;
  }

  getContent(): string {
    return this.value1;
  }

  getTotalQuality(): BigInt {
    return this.value2;
  }

  getNumberOfQualityVotes(): BigInt {
    return this.value3;
  }

  getSubmittedBy(): Address {
    return this.value4;
  }
}

export class DAlign extends ethereum.SmartContract {
  static bind(address: Address): DAlign {
    return new DAlign("DAlign", address);
  }

  answers(param0: Bytes): DAlign__answersResult {
    let result = super.call(
      "answers",
      "answers(bytes32):(bytes32,string,int256,uint256,address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new DAlign__answersResult(
      result[0].toBytes(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toAddress()
    );
  }

  try_answers(param0: Bytes): ethereum.CallResult<DAlign__answersResult> {
    let result = super.tryCall(
      "answers",
      "answers(bytes32):(bytes32,string,int256,uint256,address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DAlign__answersResult(
        value[0].toBytes(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toAddress()
      )
    );
  }

  promptToAnswers(param0: Bytes, param1: BigInt): Bytes {
    let result = super.call(
      "promptToAnswers",
      "promptToAnswers(bytes32,uint256):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBytes();
  }

  try_promptToAnswers(
    param0: Bytes,
    param1: BigInt
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "promptToAnswers",
      "promptToAnswers(bytes32,uint256):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  prompts(param0: Bytes): DAlign__promptsResult {
    let result = super.call(
      "prompts",
      "prompts(bytes32):(bytes32,string,uint256,uint256,address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new DAlign__promptsResult(
      result[0].toBytes(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toAddress()
    );
  }

  try_prompts(param0: Bytes): ethereum.CallResult<DAlign__promptsResult> {
    let result = super.tryCall(
      "prompts",
      "prompts(bytes32):(bytes32,string,uint256,uint256,address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DAlign__promptsResult(
        value[0].toBytes(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toAddress()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddAnswerCall extends ethereum.Call {
  get inputs(): AddAnswerCall__Inputs {
    return new AddAnswerCall__Inputs(this);
  }

  get outputs(): AddAnswerCall__Outputs {
    return new AddAnswerCall__Outputs(this);
  }
}

export class AddAnswerCall__Inputs {
  _call: AddAnswerCall;

  constructor(call: AddAnswerCall) {
    this._call = call;
  }

  get promptId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get content(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddAnswerCall__Outputs {
  _call: AddAnswerCall;

  constructor(call: AddAnswerCall) {
    this._call = call;
  }
}

export class CreatePromptCall extends ethereum.Call {
  get inputs(): CreatePromptCall__Inputs {
    return new CreatePromptCall__Inputs(this);
  }

  get outputs(): CreatePromptCall__Outputs {
    return new CreatePromptCall__Outputs(this);
  }
}

export class CreatePromptCall__Inputs {
  _call: CreatePromptCall;

  constructor(call: CreatePromptCall) {
    this._call = call;
  }

  get content(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class CreatePromptCall__Outputs {
  _call: CreatePromptCall;

  constructor(call: CreatePromptCall) {
    this._call = call;
  }
}

export class EvaluatePromptQualityCall extends ethereum.Call {
  get inputs(): EvaluatePromptQualityCall__Inputs {
    return new EvaluatePromptQualityCall__Inputs(this);
  }

  get outputs(): EvaluatePromptQualityCall__Outputs {
    return new EvaluatePromptQualityCall__Outputs(this);
  }
}

export class EvaluatePromptQualityCall__Inputs {
  _call: EvaluatePromptQualityCall;

  constructor(call: EvaluatePromptQualityCall) {
    this._call = call;
  }

  get promptId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get quality(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class EvaluatePromptQualityCall__Outputs {
  _call: EvaluatePromptQualityCall;

  constructor(call: EvaluatePromptQualityCall) {
    this._call = call;
  }
}

export class RateAnswersCall extends ethereum.Call {
  get inputs(): RateAnswersCall__Inputs {
    return new RateAnswersCall__Inputs(this);
  }

  get outputs(): RateAnswersCall__Outputs {
    return new RateAnswersCall__Outputs(this);
  }
}

export class RateAnswersCall__Inputs {
  _call: RateAnswersCall;

  constructor(call: RateAnswersCall) {
    this._call = call;
  }

  get promptId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get winnerId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get loserId(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class RateAnswersCall__Outputs {
  _call: RateAnswersCall;

  constructor(call: RateAnswersCall) {
    this._call = call;
  }
}
